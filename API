-- SimpleGUI: Библиотека GUI для Roblox
-- Автор: Grok (xAI)
-- Лицензия: MIT (открытый исходный код)

local SimpleGUI = {}
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Вспомогательные функции
local function createInstance(class, parent, props)
    local instance = Instance.new(class)
    if parent then
        instance.Parent = parent
    end
    for prop, value in pairs(props or {}) do
        instance[prop] = value
    end
    return instance
end

local function tween(instance, props, duration, easingStyle)
    local tweenInfo = TweenInfo.new(duration, easingStyle or Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(instance, tweenInfo, props)
    tween:Play()
    return tween
end

-- Основной объект SimpleGUI
function SimpleGUI.new(theme)
    local gui = {}
    local screenGui = createInstance("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"), {
        Name = "SimpleGUI",
        ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    })

    theme = theme or {
        PrimaryColor = Color3.fromRGB(50, 50, 50),
        SecondaryColor = Color3.fromRGB(70, 70, 70),
        TextColor = Color3.fromRGB(255, 255, 255),
        AccentColor = Color3.fromRGB(100, 100, 255)
    }

    -- Создание окна
    function gui:CreateWindow(config)
        local window = {}
        config = config or {}
        local windowFrame = createInstance("Frame", screenGui, {
            Name = config.Name or "Window",
            BackgroundColor3 = theme.PrimaryColor,
            Position = UDim2.new(0.5, -150, 0.5, -100),
            Size = UDim2.new(0, 300, 0, 400),
            BorderSizePixel = 0
        })

        local topbar = createInstance("Frame", windowFrame, {
            Name = "Topbar",
            BackgroundColor3 = theme.SecondaryColor,
            Size = UDim2.new(1, 0, 0, 30),
            BorderSizePixel = 0
        })

        local title = createInstance("TextLabel", topbar, {
            BackgroundTransparency = 1,
            Position = UDim2.new(0.05, 0, 0, 0),
            Size = UDim2.new(0.9, 0, 1, 0),
            Font = Enum.Font.SourceSansBold,
            Text = config.Name or "SimpleGUI",
            TextColor3 = theme.TextColor,
            TextScaled = true,
            TextXAlignment = Enum.TextXAlignment.Left
        })

        local tabContainer = createInstance("Frame", windowFrame, {
            Name = "TabContainer",
            BackgroundTransparency = 1,
            Position = UDim2.new(0, 0, 0, 30),
            Size = UDim2.new(1, 0, 1, -30)
        })

        local tabButtons = createInstance("Frame", topbar, {
            Name = "TabButtons",
            BackgroundTransparency = 1,
            Position = UDim2.new(0.3, 0, 0, 0),
            Size = UDim2.new(0.7, 0, 1, 0)
        })

        local tabButtonLayout = createInstance("UIListLayout", tabButtons, {
            FillDirection = Enum.FillDirection.Horizontal,
            HorizontalAlignment = Enum.HorizontalAlignment.Right,
            SortOrder = Enum.SortOrder.LayoutOrder,
            Padding = UDim.new(0, 5)
        })

        local tabs = {}
        local activeTab = nil

        -- Создание вкладки
        function window:CreateTab(name)
            local tab = {}
            local tabFrame = createInstance("Frame", tabContainer, {
                Name = name,
                BackgroundTransparency = 1,
                Size = UDim2.new(1, 0, 1, 0),
                Visible = false
            })

            local tabButton = createInstance("TextButton", tabButtons, {
                Name = name .. "Button",
                BackgroundColor3 = theme.SecondaryColor,
                Size = UDim2.new(0, 80, 0, 25),
                Font = Enum.Font.SourceSans,
                Text = name,
                TextColor3 = theme.TextColor,
                TextScaled = true
            })

            local sections = {}

            -- Активация вкладки
            local function activateTab()
                if activeTab then
                    activeTab.Visible = false
                end
                tabFrame.Visible = true
                activeTab = tabFrame
                for _, btn in pairs(tabButtons:GetChildren()) do
                    if btn:IsA("TextButton") then
                        btn.BackgroundColor3 = theme.SecondaryColor
                    end
                end
                tabButton.BackgroundColor3 = theme.AccentColor
            end

            tabButton.MouseButton1Click:Connect(activateTab)
            if not activeTab then
                activateTab()
            end

            -- Создание секции
            function tab:CreateSection(name)
                local section = {}
                local sectionFrame = createInstance("Frame", tabFrame, {
                    Name = name,
                    BackgroundTransparency = 1,
                    Size = UDim2.new(1, -10, 0, 100),
                    Position = UDim2.new(0, 5, 0, #sections * 110)
                })

                local sectionTitle = createInstance("TextLabel", sectionFrame, {
                    BackgroundTransparency = 1,
                    Size = UDim2.new(1, 0, 0, 20),
                    Font = Enum.Font.SourceSansBold,
                    Text = name,
                    TextColor3 = theme.TextColor,
                    TextScaled = true,
                    TextXAlignment = Enum.TextXAlignment.Left
                })

                local elementContainer = createInstance("Frame", sectionFrame, {
                    BackgroundTransparency = 1,
                    Position = UDim2.new(0, 0, 0, 25),
                    Size = UDim2.new(1, 0, 1, -25)
                })

                local elementLayout = createInstance("UIListLayout", elementContainer, {
                    SortOrder = Enum.SortOrder.LayoutOrder,
                    Padding = UDim.new(0, 5)
                })

                -- Создание кнопки
                function section:CreateButton(config)
                    local button = createInstance("TextButton", elementContainer, {
                        Name = config.Name,
                        BackgroundColor3 = theme.SecondaryColor,
                        Size = UDim2.new(1, -10, 0, 30),
                        Position = UDim2.new(0, 5, 0, 0),
                        Font = Enum.Font.SourceSans,
                        Text = config.Name,
                        TextColor3 = theme.TextColor,
                        TextScaled = true
                    })

                    button.MouseButton1Click:Connect(function()
                        if config.Callback then
                            config.Callback()
                        end
                    end)
                end

                -- Создание слайдера
                function section:CreateSlider(config)
                    local sliderFrame = createInstance("Frame", elementContainer, {
                        Name = config.Name,
                        BackgroundTransparency = 1,
                        Size = UDim2.new(1, -10, 0, 50),
                        Position = UDim2.new(0, 5, 0, 0)
                    })

                    local label = createInstance("TextLabel", sliderFrame, {
                        BackgroundTransparency = 1,
                        Size = UDim2.new(1, 0, 0, 20),
                        Font = Enum.Font.SourceSans,
                        Text = config.Name .. ": " .. config.Default,
                        TextColor3 = theme.TextColor,
                        TextScaled = true
                    })

                    local sliderBar = createInstance("Frame", sliderFrame, {
                        BackgroundColor3 = theme.SecondaryColor,
                        Size = UDim2.new(1, 0, 0, 10),
                        Position = UDim2.new(0, 0, 0, 25)
                    })

                    local fill = createInstance("Frame", sliderBar, {
                        BackgroundColor3 = theme.AccentColor,
                        Size = UDim2.new((config.Default - config.Min) / (config.Max - config.Min), 0, 1, 0)
                    })

                    local dragging = false
                    sliderBar.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            dragging = true
                        end
                    end)

                    sliderBar.InputEnded:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            dragging = false
                        end
                    end)

                    game:GetService("UserInputService").InputChanged:Connect(function(input)
                        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                            local relativeX = (input.Position.X - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X
                            relativeX = math.clamp(relativeX, 0, 1)
                            local value = math.floor(config.Min + (config.Max - config.Min) * relativeX)
                            fill.Size = UDim2.new(relativeX, 0, 1, 0)
                            label.Text = config.Name .. ": " .. value
                            if config.Callback then
                                config.Callback(value)
                            end
                        end
                    end)
                end

                -- Создание текстового поля
                function section:CreateTextbox(config)
                    local textbox = createInstance("TextBox", elementContainer, {
                        Name = config.Name,
                        BackgroundColor3 = theme.SecondaryColor,
                        Size = UDim2.new(1, -10, 0, 30),
                        Position = UDim2.new(0, 5, 0, 0),
                        Font = Enum.Font.SourceSans,
                        Text = config.Default or "",
                        TextColor3 = theme.TextColor,
                        TextScaled = true
                    })

                    textbox.FocusLost:Connect(function()
                        if config.Callback then
                            config.Callback(textbox.Text)
                        end
                    end)
                end

                table.insert(sections, sectionFrame)
                return section
            end

            tabs[name] = tab
            return tab
        end

        return window
    end

    -- Уведомления
    function gui:Notify(title, content, duration)
        local notification = createInstance("Frame", screenGui, {
            Name = "Notification",
            BackgroundColor3 = theme.PrimaryColor,
            Size = UDim2.new(0, 200, 0, 80),
            Position = UDim2.new(1, -210, 1, -90),
            BorderSizePixel = 0
        })

        local titleLabel = createInstance("TextLabel", notification, {
            BackgroundTransparency = 1,
            Size = UDim2.new(1, -10, 0, 20),
            Position = UDim2.new(0, 5, 0, 5),
            Font = Enum.Font.SourceSansBold,
            Text = title,
            TextColor3 = theme.TextColor,
            TextScaled = true,
            TextXAlignment = Enum.TextXAlignment.Left
        })

        local contentLabel = createInstance("TextLabel", notification, {
            BackgroundTransparency = 1,
            Size = UDim2.new(1, -10, 0, 50),
            Position = UDim2.new(0, 5, 0, 25),
            Font = Enum.Font.SourceSans,
            Text = content,
            TextColor3 = theme.TextColor,
            TextScaled = true,
            TextXAlignment = Enum.TextXAlignment.Left,
            TextWrapped = true
        })

        tween(notification, {Position = UDim2.new(1, -210, 1, -100)}, 0.3)
        wait(duration or 5)
        tween(notification, {Position = UDim2.new(1, 0, 1, -100)}, 0.3).Completed:Connect(function()
            notification:Destroy()
        end)
    end

    return gui
end

return SimpleGUI

-- Пример использования
--[[
local GUI = SimpleGUI.new({
    PrimaryColor = Color3.fromRGB(40, 40, 40),
    SecondaryColor = Color3.fromRGB(60, 60, 60),
    TextColor = Color3.fromRGB(255, 255, 255),
    AccentColor = Color3.fromRGB(80, 80, 255)
})

local Window = GUI:CreateWindow({Name = "Мой Эксплойт"})
local MainTab = Window:CreateTab("Основное")
local PlayerSection = MainTab:CreateSection("Управление игроком")

PlayerSection:CreateButton({
    Name = "Бесконечный прыжок",
    Callback = function()
        _G.infinjump = not _G.infinjump
        if _G.infinJumpStarted == nil then
            _G.infinJumpStarted = true
            local plr = game:GetService("Players").LocalPlayer
            local m = plr:GetMouse()
            m.KeyDown:Connect(function(k)
                if _G.infinjump and k:byte() == 32 then
                    local humanoid = plr.Character:FindFirstChildOfClass("Humanoid")
                    if humanoid then
                        humanoid:ChangeState("Jumping")
                        wait()
                        humanoid:ChangeState("Seated")
                    end
                end
            end)
        end
    end
})

PlayerSection:CreateSlider({
    Name = "Скорость",
    Min = 16,
    Max = 100,
    Default = 16,
    Callback = function(value)
        local character = game.Players.LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = value
            end
        end
    end
})

PlayerSection:CreateTextbox({
    Name = "Выполнить скрипт",
    Default = "",
    Callback = function(text)
        if text and text ~= "" then
            loadstring(text)()
        end
    end
})

GUI:Notify("GUI загружен", "Добро пожаловать в SimpleGUI!", 5)
--]]
